Setting up home lab
# create a kickstart file to automate the Ansible server control node and a client server this file was generated by Poe so give it a try.

To use Kickstart you must:

Choose a kickstart server and create/edit a kickstart file
Make the kickstart file available on a network location
Make the installation source available
Make boot media available for client which will be used to begin the installation
start the kickstart installation

You can use either: NFS, FTP, HTTP or HTTPS, for this example http will be used. 

When logging in as root home directory there is a anaconda kickstart file that you can modify or create a fresh one:



#beginning of file

#version=RHEL9
install
lang en_US.UTF-8
keyboard us
network --bootproto=dhcperver= --hostname=ansible-master
rootpw --plaintext your_password_here
timezone America/New_York --isUtc
user --name=ansible_master --password=your_hashed_password_here --gecos="Ansible Master" --groups=wheel

# Partitioning
autopart --type=lvm

# System services
services --enabled="sshd"

# Package selection
%packages
@^server-with-guil
@^development
@^server
ansible
git
python3
python3-pip
%end

# Post-installation script
%post
# Install additional Python packages if needed
pip3 install --upgrade pip
pip3 install boto boto3  # Optional: for AWS integrations
echo "Ansible installation complete."
%end


####################################################################

# Once you finish with the file ensure httpd is installed and enabled --now, then copy the kick start file to /var/www/html, change permissions to
# make it readable, verify you can reach the page from another computer.
# - dnf install http -y
# - systemctl enable --now httpd
# - cp <kickstart_file> /var/www/html
# - curl http://<path_to_file> # may not be necessary
# - chmod a+r <path_to_file>


#################### If this is a success make sure you add it to the automations folder as something useable#############################################
